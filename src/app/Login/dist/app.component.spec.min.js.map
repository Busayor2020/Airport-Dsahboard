{"version":3,"sources":["app.component.spec.ts"],"names":["testing_1","require","testing_2","app_component_1","describe","beforeEach","__awaiter","TestBed","configureTestingModule","imports","RouterTestingModule","declarations","AppComponent","compileComponents","_a","sent","it","app","createComponent","componentInstance","expect","toBeTruthy","title","toEqual","fixture","detectChanges","compiled","nativeElement","querySelector","textContent","toContain"],"mappings":"y7CAAA,IAAAA,UAAAC,QAAA,yBACAC,UAAAD,QAAA,2BACAE,gBAAAF,QAAA,mBAEAG,SAAS,eAAgB,WACvBC,WAAW,WAAA,OAAAC,eAAA,OAAA,OAAA,EAAA,sEACT,MAAA,CAAA,EAAMN,UAAAO,QAAQC,uBAAuB,CACnCC,QAAS,CACPP,UAAAQ,qBAEFC,aAAc,CACZR,gBAAAS,gBAEDC,mCAPHC,EAAAC,kBAUFC,GAAG,wBAAyB,WAC1B,IACMC,EADUjB,UAAAO,QAAQW,gBAAgBf,gBAAAS,cACpBO,kBACpBC,OAAOH,GAAKI,eAGdL,GAAG,2CAA4C,WAC7C,IACMC,EADUjB,UAAAO,QAAQW,gBAAgBf,gBAAAS,cACpBO,kBACpBC,OAAOH,EAAIK,OAAOC,QAAQ,uBAG5BP,GAAG,sBAAuB,iBAClBQ,EAAUxB,UAAAO,QAAQW,gBAAgBf,gBAAAS,cACxCY,EAAQC,gBACR,IAAMC,EAAWF,EAAQG,cACzBP,OAA8C,QAAxCN,EAACY,EAASE,cAAc,wBAAgB,IAAAd,OAAA,EAAAA,EAAEe,aAAaC,UAAU","file":"app.component.spec.min.js","sourcesContent":["import { TestBed } from '@angular/core/testing';\nimport { RouterTestingModule } from '@angular/router/testing';\nimport { AppComponent } from './app.component';\n\ndescribe('AppComponent', () => {\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      imports: [\n        RouterTestingModule\n      ],\n      declarations: [\n        AppComponent\n      ],\n    }).compileComponents();\n  });\n\n  it('should create the app', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app).toBeTruthy();\n  });\n\n  it(`should have as title 'Airport-Dashboard'`, () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    const app = fixture.componentInstance;\n    expect(app.title).toEqual('Airport-Dashboard');\n  });\n\n  it('should render title', () => {\n    const fixture = TestBed.createComponent(AppComponent);\n    fixture.detectChanges();\n    const compiled = fixture.nativeElement as HTMLElement;\n    expect(compiled.querySelector('.content span')?.textContent).toContain('Airport-Dashboard app is running!');\n  });\n});\n"]}